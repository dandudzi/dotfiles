#‚õîÔ∏è relode plugins
# <prefix-shift+i> 
# update plugin
# <prefix-shift+U> type all then enter
# <prefix-u> clean plugins 

# menaging sessions screen
bind-key "j" run-shell "sesh connect \"$(
  sesh list --icons --hide-duplicates | fzf-tmux -p 100%,100% --no-border \
    --ansi \
    --list-border \
    --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
    --no-sort --prompt '‚ö°  ' \
    --color 'list-border:6,input-border:3,preview-border:4,header-bg:-1,header-border:6' \
    --input-border \
    --header-border \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-b:abort' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-t:change-prompt(ÓØà  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-d:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --preview-window 'right:70%' \
    --preview 'sesh preview {}' \
)\""

# dialog for picking session
bind-key "k" display-popup -E -w 40% "sesh connect \"$(
  sesh list -i | gum filter --limit 1 --placeholder 'Pick a sesh' --prompt='‚ö°'
)\"" # root sessions

# switching between two last sessions
bind -N "last-session (via sesh) " r run-shell "sesh last"

bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
set -g detach-on-destroy off  # don't exit from tmux when closing a sessiono

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# begin selection with `v` (vi-like)
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# make sure that complex keybindings are porperly recognized by tmux
#set -g extended-keys always

# setup full colors in terminal
set -g default-terminal "screen-256color"
if 'infocmp tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'
set-option -ga terminal-overrides ',xterm-256color:Tc'
set-option -as terminal-overrides ',xterm*:sitm=\E[3m'

# reduce delay for escape so more responsive
set -gs escape-time 0

# seem not working  status of tmux on top of terminal
set -g status-position top

# how often status is refreshed in seconds
set -g status-interval 5

# make sure that tmux also copy code to clipboard
set -g set-clipboard on

# allows tmux to change title 
set -g set-titles on

# Enable mouse support
set -g mouse on

# Use UTF-8 encoding
set-option -gq utf8
set-window-option -gq utf8 on

# act like vim
setw -g mode-keys vi
set -g status-keys vi

# enable yazi
set -g allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

# make tmux get to know applicaiton inside about focus chaning when switchin panes e.g. neovim can reload file
set-option -g focus-events on

# make sure that escape time is shorter so switch between insert and visual mode is faster in vim
set-option -sg escape-time 10

# start panes and windows form 1
set -g base-index 1
set-window-option -g pane-base-index 1

# double broder lines between panes
set -g pane-border-lines double

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# tmux popus with rounded properties 
set -g popup-border-lines rounded

# enable wezterm terminal hyperlinks
set -sa terminal-features ",*:hyperlinks"

# Change the keybinding to enter copy mode from 'prefix + [' to 'prefix + v'
unbind v
bind v copy-mode

# Bind Esc to exit copy-mode
bind-key -T copy-mode-vi 'Escape' send -X cancel

# start selecting text with "v", this is visual mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
# copy text with "y"
bind-key -T copy-mode-vi 'y' send -X copy-selection

# Thi is what allows me to press gh and gl to to to the beginning and end of
# line respectively when in copy-mode (visual mode)
# Unbind the default 'g' key in copy-mode-vi
unbind -T copy-mode-vi g
# Define a custom key table for extended copy-mode bindings
bind-key -T copy-mode-vi 'g' switch-client -T copy-mode-extended
# Bind 'h' in the extended copy-mode to go to the beginning of the line
bind-key -T copy-mode-extended 'h' send -X start-of-line \; switch-client -T copy-mode-vi
# Bind 'l' in the extended copy-mode to go to the end of the line
bind-key -T copy-mode-extended 'l' send -X end-of-line \; switch-client -T copy-mode-vi

# List of plugins
set -g @plugin 'catppuccin/tmux'			# theme cattpucion
set -g @plugin 'tmux-plugins/tmux-sensible'		# some sensible settings
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'	# highlight prefix
set -g @plugin 'tmux-plugins/tmux-yank'			# yank to system clipboard
set -g @plugin 'sainnhe/tmux-fzf'			# search actions
set -g @plugin 'tmux-plugins/tmux-resurrect'		# allows saving sessions
set -g @plugin 'tmux-plugins/tmux-continuum'		# automatically save session
set -g @plugin 'alexwforsythe/tmux-which-key'		# which key via space
set -g @plugin 'christoomey/vim-tmux-navigator' # seemleas tmux and nvim pane switching 

# tmux-fzf preview disabled
TMUX_FZF_PREVIEW=0

# {{{tmux-prefix-highlight
set -g @prefix_highlight_fg 'colour00'
set -g @prefix_highlight_bg 'red'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=colour00,bg=colour05,bold'
set -g @prefix_highlight_prefix_prompt 'PREFIX'
set -g @prefix_highlight_copy_prompt 'COPY'
# }}}
set -g @tpm-clean 'u'

# Configure the catppuccin plugin
set -g @catppuccin_flavor 'macchiato'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_window_text "#W"
set -g @catppuccin_window_current_text "#W"
run ~/.config/tmux/plugins/tmux/catppuccin.tmux
set -g status-right-length 200
set -g status-left-length 200
set -g status-left ""
set -g status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_directory}"
set -ag status-right "#{E:@catppuccin_status_user}"
set -ag status-right "#{E:@catppuccin_status_host}"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_modules_left "session"

# Set strategy to restore neovim sessions
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-save-interval '5'
set -g @continuum-restore 'on'

# always on the bottom to trigger all the pluginx actions
set -g @plugin 'tmux-plugins/tpm'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.config/tmux/plugins/tpm/tpm'
