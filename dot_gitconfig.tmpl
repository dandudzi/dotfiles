[user]
	name = Daniel Dudziak
	email = {{ .email }}
  {{ if .work -}}
    signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAOhOBKJKhwfQ9ZR52PSiEHSCcv7srnwdH1EngDjIAwM
  {{ else -}}
    signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICwFmLNYerRzGP9de3D3jblBa6orRzAlQcMUbANqoLK5
  {{ end -}}

[color]
	ui = auto
[interactive]
	diffFilter = delta --color-only
[core]
	excludesFile = $HOME/.gitignore_global
	untrackedCache = true
	fsmonitor = true
	pager = delta
	# Make `git rebase` safer on macOS.
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false
	# Treat spaces before tabs and all kinds of trailing whitespace as an error.
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space
	# filename normalization issues between macOS and other operating systems like Linux or Windows.
	precomposeUnicode = true
	# activates the use of a commit-graph file, which significantly enhances the performance
	commitGraph = true
	# Git converts carriage return-line feed (CRLF) line endings to line feed (LF)
	autocrlf = input
	# Git performs the conversion but issues a warning if the conversion might be irreversible.
	safecrlf = warn
[apply]
	# Detect whitespace errors when applying a patch.
	whitespace = fix
[commit]
	gpgsign = true
  # shows changes when writing down commit message
  verbose = true
[tag]
	gpgSign = true
  # sorts tags based on the versioning
  sort = version:refname
[branch]
	# Show most recently changed branches first.
	sort = -committerdate
	# This approach helps maintain a linear project history by applying your local commits on top of the fetched commits
	autosetuprebase = always
[fetch]
	# removes local references to remote branches that no longer exist on the remote repository
	prune = true
	# delete local tags that have been removed from the remote repository
	pruneTags = true
	# update the commit-graph file after fetching
	writeCommitGraph = true
[pull]
	# will push the current branch to the remote branch of the same name, but only if they match
	rebase = true
[merge]
	conflictStyle = zdiff3
  # mare nvim diff as tool for merging conflicts
[mergetool "nvimdiff"]
  layout = "LOCAL,BASE,REMOTE / MERGED"
[rerere]
  # reuse recorded resolutions for merge conflicts so it will be done automatically
  enabled = true
  # git will learn and put into cache how conflicts were solved
  autoupdate = true
[rebase]
  # when there are any commits marked to be squashed it will be done during rebase
  autoSquash = true
  # auto stash uncommited changes so rebased can be sucessful 
  autoStash = true
  # ensure that branch refs point to the new commit after rebase
  # after rebase commits have new hashes so this option should be default to make sure all is set up
  updateRefs = true
[push]
	# will push the current branch to the remote branch of the same name, but only if they match
	default = simple
	# create a new branch, Git automatically sets up a tracking relationship with the remote repository 
	autoSetupRemote = true
  # make sure that tags are also pushed so they are synced
  followTags = true
[diff]
	algorithm = histogram
	# Use new diff algorithm to make e.g. function diffs look better.
	compactionheuristic = true
	# Activating this option allows Git to detect renames during diff operations
	renames = true
[gc]
	# Write commit graph to speed up some repositories when GC
	writeCommitGraph = true
[protocol]
	# Use Git v2 protocol for better performance
	version = 2
[help]
	# Automatically correct and execute mistyped commands.
	autocorrect = 1
[include]
	path = ~/.config/git/catppuccin.gitconfig
[delta]
	navigate = true    # use n and N to move between diff sections
	dark = true
	line-numbers = true
	side-by-side = true
	true-color = always
	colorMoved = default
	hyperlinks = true
	decorations = true
	features = catppuccin-macchiato
 [gpg]
     format = ssh
